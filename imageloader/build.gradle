apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.one-piece-luffy'
android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    compileSdkVersion 30
    buildToolsVersion "30.0.3"


    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation 'com.android.support:appcompat-v7:'+rootProject.ext.supportLibVersion


    //use glide
    api 'com.github.bumptech.glide:glide:4.12.0'
    api 'com.github.bumptech.glide:annotations:4.12.0'
    api 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    api ('com.github.bumptech.glide:okhttp3-integration:4.12.0'){
//        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
}


//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.sourceFiles
//}
//
////task javadoc(type: Javadoc) {
////    source = android.sourceSets.main.java.sourceFiles
////    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
////}
////
////task javadocJar(type: Jar, dependsOn: javadoc) {
////    classifier = 'javadoc'
////    from javadoc.destinationDir
////}
////
////task classesJar(type: Jar) {
////    from "$buildDir/intermediates/classes/release"
////}
//
//artifacts {
////    archives classesJar
////    archives javadocJar
//    archives sourcesJar
//}
